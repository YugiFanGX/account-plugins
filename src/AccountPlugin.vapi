/* AccountPlugin.vapi generated by vapigen-0.16, do not modify. */

[CCode (cprefix = "Ap", gir_namespace = "AccountPlugin", gir_version = "1.0", lower_case_cprefix = "ap_")]
namespace Ap {
	[CCode (cheader_filename = "libaccount-plugin/account-plugin.h", type_id = "ap_oauth_plugin_get_type ()")]
	public class OAuthPlugin : Ap.Plugin {
		[CCode (has_construct_function = false)]
		protected OAuthPlugin ();
		public void set_oauth_parameters (GLib.HashTable<string,GLib.Value?> oauth_params);
		[NoAccessorMethod]
		public GLib.HashTable<weak void*,weak void*> oauth_params { owned get; construct; }
	}
	[CCode (cheader_filename = "libaccount-plugin/account-plugin.h", type_id = "ap_plugin_get_type ()")]
	public class Plugin : GLib.Object {
		[CCode (has_construct_function = false)]
		protected Plugin ();
		public virtual unowned Gtk.Widget build_widget ();
		public void emit_finished ();
		public unowned Ag.Account get_account ();
		public unowned GLib.Error get_error ();
		public bool get_need_authentication ();
		public unowned Ag.Provider get_provider ();
		public bool get_user_cancelled ();
		public void set_error (GLib.Error error);
		public void set_need_authentication (bool need_authentication);
		public void set_user_cancelled (bool cancelled);
		public Ag.Account account { get; construct; }
		public bool need_authentication { get; set; }
		public signal void finished ();
	}
	[CCode (cheader_filename = "libaccount-plugin/account-plugin.h")]
	public static Ap.Plugin client_load_plugin (Ag.Account account);
	[CCode (cheader_filename = "libaccount-plugin/account-plugin.h")]
	public static GLib.Type module_get_object_type ();
}
